ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"FPS_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.FPS_Timer_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	FPS_Timer_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	FPS_Timer_Enable, %function
  24              	FPS_Timer_Enable:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\FPS_Timer.c"
   1:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/FPS_Timer.c **** * File Name: FPS_Timer.c
   3:.\Generated_Source\PSoC5/FPS_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/FPS_Timer.c **** *
   5:.\Generated_Source\PSoC5/FPS_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/FPS_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/FPS_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/FPS_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/FPS_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/FPS_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/FPS_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/FPS_Timer.c **** *
  15:.\Generated_Source\PSoC5/FPS_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/FPS_Timer.c **** *
  17:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/FPS_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/FPS_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/FPS_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/FPS_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  24:.\Generated_Source\PSoC5/FPS_Timer.c **** #include "FPS_Timer.h"
  25:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  26:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8 FPS_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  28:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  29:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_Init
  31:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 2


  32:.\Generated_Source\PSoC5/FPS_Timer.c **** *
  33:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/FPS_Timer.c **** *
  36:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/FPS_Timer.c **** *
  39:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/FPS_Timer.c **** *
  42:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/FPS_Timer.c **** {
  45:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(!FPS_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/FPS_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/FPS_Timer.c ****             uint8 FPS_Timer_interruptState;
  48:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  50:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (FPS_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL &= FPS_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  54:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/FPS_Timer.c ****             FPS_Timer_CONTROL2 &= ((uint8)(~FPS_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  59:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/FPS_Timer.c ****             FPS_Timer_CONTROL3 &= ((uint8)(~FPS_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  63:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/FPS_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/FPS_Timer.c ****             FPS_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  69:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/FPS_Timer.c ****             #if (CY_PSOC5A)
  71:.\Generated_Source\PSoC5/FPS_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/FPS_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/FPS_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  76:.\Generated_Source\PSoC5/FPS_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/FPS_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/FPS_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/FPS_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  82:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  84:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/FPS_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/FPS_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL2 |= FPS_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/FPS_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 3


  89:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  90:.\Generated_Source\PSoC5/FPS_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/FPS_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL3 &= ((uint8)(~FPS_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL3 |= FPS_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  95:.\Generated_Source\PSoC5/FPS_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL3 &= ((uint8)(~FPS_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL3 |= FPS_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/FPS_Timer.c **** 
  99:.\Generated_Source\PSoC5/FPS_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/FPS_Timer.c ****                 FPS_Timer_CONTROL3 |= FPS_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/FPS_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 103:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 105:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_RT1 &= ((uint8)(~FPS_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_RT1 |= FPS_Timer_SYNC;
 108:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 109:.\Generated_Source\PSoC5/FPS_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_RT1 &= ((uint8)(~FPS_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_RT1 |= FPS_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 113:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL2 |= FPS_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 117:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_WritePeriod(FPS_Timer_INIT_PERIOD);
 119:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_WriteCounter(FPS_Timer_INIT_PERIOD);
 120:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 121:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (FPS_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CAPTURE_COUNT_CTRL |= FPS_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_SetCaptureCount(FPS_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 126:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/FPS_Timer.c ****             FPS_Timer_SetCaptureMode(FPS_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 131:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/FPS_Timer.c ****             #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/FPS_Timer.c ****                 if (0u == (FPS_Timer_CONTROL & FPS_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/FPS_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/FPS_Timer.c ****                     FPS_Timer_SetTriggerMode(FPS_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/FPS_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/FPS_Timer.c ****             #endif /* (!FPS_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 140:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_interruptState = CyEnterCriticalSection();
 143:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 144:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_STATUS_AUX_CTRL |= FPS_Timer_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 4


 146:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 147:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/FPS_Timer.c ****         CyExitCriticalSection(FPS_Timer_interruptState);
 149:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 150:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/FPS_Timer.c ****             FPS_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/FPS_Timer.c **** 		
 154:.\Generated_Source\PSoC5/FPS_Timer.c **** 		
 155:.\Generated_Source\PSoC5/FPS_Timer.c ****         #if (FPS_Timer_InterruptOnCaptureCount && !FPS_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/FPS_Timer.c ****             FPS_Timer_SetInterruptCount(FPS_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/FPS_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 159:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_ClearFIFO();
 160:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 161:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 162:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_SetInterruptMode(FPS_Timer_INIT_INTERRUPT_MODE);
 163:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 164:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 165:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 166:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_Enable
 168:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 170:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 173:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 176:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 179:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/FPS_Timer.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (FPS_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_GLOBAL_ENABLE |= FPS_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_GLOBAL_STBY_ENABLE |= FPS_Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 188:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED || FPS_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL |= FPS_Timer_CTRL_ENABLE;
  32              		.loc 1 190 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 5


  39              		.align	2
  40              	.L2:
  41 000c 7B640040 		.word	1073767547
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	FPS_Timer_Enable, .-FPS_Timer_Enable
  45              		.section	.text.FPS_Timer_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	FPS_Timer_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	FPS_Timer_Stop, %function
  51              	FPS_Timer_Stop:
  52              	.LFB3:
 191:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 193:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 194:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 195:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_Start
 197:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 199:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/FPS_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/FPS_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 204:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 207:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 210:.\Generated_Source\PSoC5/FPS_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/FPS_Timer.c **** *  FPS_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/FPS_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 214:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 217:.\Generated_Source\PSoC5/FPS_Timer.c ****     if(FPS_Timer_initVar == 0u)
 218:.\Generated_Source\PSoC5/FPS_Timer.c ****     {
 219:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_Init();
 220:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 221:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 222:.\Generated_Source\PSoC5/FPS_Timer.c ****     }
 223:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 224:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_Enable();
 226:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 227:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 228:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 229:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_Stop
 231:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 233:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 6


 234:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/FPS_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 237:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 240:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 243:.\Generated_Source\PSoC5/FPS_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/FPS_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 246:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/FPS_Timer.c **** {
  53              		.loc 1 248 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 249:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(!FPS_Timer_UDB_CONTROL_REG_REMOVED || FPS_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL &= ((uint8)(~FPS_Timer_CTRL_ENABLE));
  58              		.loc 1 251 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 7B640040 		.word	1073767547
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	FPS_Timer_Stop, .-FPS_Timer_Stop
  71              		.section	.text.FPS_Timer_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	FPS_Timer_SetInterruptMode
  74              		.thumb
  75              		.thumb_func
  76              		.type	FPS_Timer_SetInterruptMode, %function
  77              	FPS_Timer_SetInterruptMode:
  78              	.LFB4:
 252:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 254:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (FPS_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_GLOBAL_ENABLE &= ((uint8)(~FPS_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~FPS_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 260:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 261:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 262:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 7


 265:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 266:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/FPS_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 271:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/FPS_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/FPS_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 275:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 278:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/FPS_Timer.c **** {
  79              		.loc 1 280 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 281:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_STATUS_MASK = interruptMode;
  85              		.loc 1 281 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 8B640040 		.word	1073767563
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	FPS_Timer_SetInterruptMode, .-FPS_Timer_SetInterruptMode
  96              		.section	.text.FPS_Timer_SoftwareCapture,"ax",%progbits
  97              		.align	2
  98              		.global	FPS_Timer_SoftwareCapture
  99              		.thumb
 100              		.thumb_func
 101              		.type	FPS_Timer_SoftwareCapture, %function
 102              	FPS_Timer_SoftwareCapture:
 103              	.LFB5:
 282:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 283:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 284:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 285:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 289:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 292:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 295:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 8


 297:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 298:.\Generated_Source\PSoC5/FPS_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/FPS_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 301:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 104              		.loc 1 303 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 304:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(FPS_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/FPS_Timer.c ****         (void)CY_GET_REG16(FPS_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/FPS_Timer.c ****         (void)CY_GET_REG8(FPS_Timer_COUNTER_LSB_PTR_8BIT);
 109              		.loc 1 308 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0004 7047     		bx	lr
 113              	.L12:
 114 0006 00BF     		.align	2
 115              	.L11:
 116 0008 0B640040 		.word	1073767435
 117              		.cfi_endproc
 118              	.LFE5:
 119              		.size	FPS_Timer_SoftwareCapture, .-FPS_Timer_SoftwareCapture
 120              		.section	.text.FPS_Timer_ReadStatusRegister,"ax",%progbits
 121              		.align	2
 122              		.global	FPS_Timer_ReadStatusRegister
 123              		.thumb
 124              		.thumb_func
 125              		.type	FPS_Timer_ReadStatusRegister, %function
 126              	FPS_Timer_ReadStatusRegister:
 127              	.LFB6:
 309:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif/* (FPS_Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 312:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 313:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 314:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 318:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/FPS_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/FPS_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 323:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 326:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 329:.\Generated_Source\PSoC5/FPS_Timer.c **** * Side Effects:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 9


 330:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 332:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8   FPS_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 128              		.loc 1 334 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 335:.\Generated_Source\PSoC5/FPS_Timer.c ****     return (FPS_Timer_STATUS);
 133              		.loc 1 335 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 136              		.loc 1 336 0
 137 0004 7047     		bx	lr
 138              	.L15:
 139 0006 00BF     		.align	2
 140              	.L14:
 141 0008 6B640040 		.word	1073767531
 142              		.cfi_endproc
 143              	.LFE6:
 144              		.size	FPS_Timer_ReadStatusRegister, .-FPS_Timer_ReadStatusRegister
 145              		.section	.text.FPS_Timer_ReadControlRegister,"ax",%progbits
 146              		.align	2
 147              		.global	FPS_Timer_ReadControlRegister
 148              		.thumb
 149              		.thumb_func
 150              		.type	FPS_Timer_ReadControlRegister, %function
 151              	FPS_Timer_ReadControlRegister:
 152              	.LFB7:
 337:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 338:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 339:.\Generated_Source\PSoC5/FPS_Timer.c **** #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 341:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 342:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 346:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 349:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 352:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 355:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8 FPS_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 153              		.loc 1 357 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 10


 157              		@ link register save eliminated.
 358:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/FPS_Timer.c ****         return ((uint8)FPS_Timer_CONTROL);
 158              		.loc 1 359 0
 159 0000 014B     		ldr	r3, .L17
 160 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/FPS_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* (!FPS_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 161              		.loc 1 363 0
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 00BF     		.align	2
 165              	.L17:
 166 0008 7B640040 		.word	1073767547
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	FPS_Timer_ReadControlRegister, .-FPS_Timer_ReadControlRegister
 170              		.section	.text.FPS_Timer_WriteControlRegister,"ax",%progbits
 171              		.align	2
 172              		.global	FPS_Timer_WriteControlRegister
 173              		.thumb
 174              		.thumb_func
 175              		.type	FPS_Timer_WriteControlRegister, %function
 176              	FPS_Timer_WriteControlRegister:
 177              	.LFB8:
 364:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 365:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 366:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 370:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 373:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/FPS_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 376:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 378:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 178              		.loc 1 380 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL1:
 381:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL = control;
 184              		.loc 1 382 0
 185 0000 014B     		ldr	r3, .L20
 186 0002 1870     		strb	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L21:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 11


 189 0006 00BF     		.align	2
 190              	.L20:
 191 0008 7B640040 		.word	1073767547
 192              		.cfi_endproc
 193              	.LFE8:
 194              		.size	FPS_Timer_WriteControlRegister, .-FPS_Timer_WriteControlRegister
 195              		.section	.text.FPS_Timer_ReadPeriod,"ax",%progbits
 196              		.align	2
 197              		.global	FPS_Timer_ReadPeriod
 198              		.thumb
 199              		.thumb_func
 200              		.type	FPS_Timer_ReadPeriod, %function
 201              	FPS_Timer_ReadPeriod:
 202              	.LFB9:
 383:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/FPS_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* (!FPS_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 387:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 388:.\Generated_Source\PSoC5/FPS_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 390:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 391:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 395:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 398:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 401:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 404:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8 FPS_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 203              		.loc 1 406 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 407:.\Generated_Source\PSoC5/FPS_Timer.c ****    #if(FPS_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/FPS_Timer.c ****        return ((uint8)CY_GET_REG16(FPS_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/FPS_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/FPS_Timer.c ****        return (CY_GET_REG8(FPS_Timer_PERIOD_LSB_PTR));
 208              		.loc 1 410 0
 209 0000 014B     		ldr	r3, .L23
 210 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 411:.\Generated_Source\PSoC5/FPS_Timer.c ****    #endif /* (FPS_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 211              		.loc 1 412 0
 212 0004 7047     		bx	lr
 213              	.L24:
 214 0006 00BF     		.align	2
 215              	.L23:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 12


 216 0008 2B640040 		.word	1073767467
 217              		.cfi_endproc
 218              	.LFE9:
 219              		.size	FPS_Timer_ReadPeriod, .-FPS_Timer_ReadPeriod
 220              		.section	.text.FPS_Timer_WritePeriod,"ax",%progbits
 221              		.align	2
 222              		.global	FPS_Timer_WritePeriod
 223              		.thumb
 224              		.thumb_func
 225              		.type	FPS_Timer_WritePeriod, %function
 226              	FPS_Timer_WritePeriod:
 227              	.LFB10:
 413:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 414:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 415:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 419:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/FPS_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 423:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/FPS_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/FPS_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 427:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 430:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_WritePeriod(uint8 period) 
 432:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 228              		.loc 1 432 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 0
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              		@ link register save eliminated.
 233              	.LVL2:
 433:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(FPS_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/FPS_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/FPS_Timer.c ****         CY_SET_REG16(FPS_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/FPS_Timer.c ****         CY_SET_REG8(FPS_Timer_PERIOD_LSB_PTR, period);
 234              		.loc 1 437 0
 235 0000 014B     		ldr	r3, .L26
 236 0002 1870     		strb	r0, [r3]
 237 0004 7047     		bx	lr
 238              	.L27:
 239 0006 00BF     		.align	2
 240              	.L26:
 241 0008 2B640040 		.word	1073767467
 242              		.cfi_endproc
 243              	.LFE10:
 244              		.size	FPS_Timer_WritePeriod, .-FPS_Timer_WritePeriod
 245              		.section	.text.FPS_Timer_ReadCapture,"ax",%progbits
 246              		.align	2
 247              		.global	FPS_Timer_ReadCapture
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 13


 248              		.thumb
 249              		.thumb_func
 250              		.type	FPS_Timer_ReadCapture, %function
 251              	FPS_Timer_ReadCapture:
 252              	.LFB11:
 438:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 440:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 441:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 442:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 446:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 449:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 452:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 455:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8 FPS_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 253              		.loc 1 457 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 0
 256              		@ frame_needed = 0, uses_anonymous_args = 0
 257              		@ link register save eliminated.
 458:.\Generated_Source\PSoC5/FPS_Timer.c ****    #if(FPS_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/FPS_Timer.c ****        return ((uint8)CY_GET_REG16(FPS_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/FPS_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/FPS_Timer.c ****        return (CY_GET_REG8(FPS_Timer_CAPTURE_LSB_PTR));
 258              		.loc 1 461 0
 259 0000 014B     		ldr	r3, .L29
 260 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 462:.\Generated_Source\PSoC5/FPS_Timer.c ****    #endif /* (FPS_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 261              		.loc 1 463 0
 262 0004 7047     		bx	lr
 263              	.L30:
 264 0006 00BF     		.align	2
 265              	.L29:
 266 0008 4B640040 		.word	1073767499
 267              		.cfi_endproc
 268              	.LFE11:
 269              		.size	FPS_Timer_ReadCapture, .-FPS_Timer_ReadCapture
 270              		.section	.text.FPS_Timer_WriteCounter,"ax",%progbits
 271              		.align	2
 272              		.global	FPS_Timer_WriteCounter
 273              		.thumb
 274              		.thumb_func
 275              		.type	FPS_Timer_WriteCounter, %function
 276              	FPS_Timer_WriteCounter:
 277              	.LFB12:
 464:.\Generated_Source\PSoC5/FPS_Timer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 14


 465:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 466:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 470:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 473:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/FPS_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 476:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 479:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_WriteCounter(uint8 counter) 
 481:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 278              		.loc 1 481 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		@ link register save eliminated.
 283              	.LVL3:
 482:.\Generated_Source\PSoC5/FPS_Timer.c ****    #if(FPS_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/FPS_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/FPS_Timer.c ****          */
 486:.\Generated_Source\PSoC5/FPS_Timer.c ****         CY_SET_REG16(FPS_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/FPS_Timer.c ****         
 488:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/FPS_Timer.c ****         CY_SET_REG8(FPS_Timer_COUNTER_LSB_PTR, counter);
 284              		.loc 1 489 0
 285 0000 014B     		ldr	r3, .L32
 286 0002 1870     		strb	r0, [r3]
 287 0004 7047     		bx	lr
 288              	.L33:
 289 0006 00BF     		.align	2
 290              	.L32:
 291 0008 0B640040 		.word	1073767435
 292              		.cfi_endproc
 293              	.LFE12:
 294              		.size	FPS_Timer_WriteCounter, .-FPS_Timer_WriteCounter
 295              		.section	.text.FPS_Timer_ReadCounter,"ax",%progbits
 296              		.align	2
 297              		.global	FPS_Timer_ReadCounter
 298              		.thumb
 299              		.thumb_func
 300              		.type	FPS_Timer_ReadCounter, %function
 301              	FPS_Timer_ReadCounter:
 302              	.LFB13:
 490:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 492:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 493:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 494:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 15


 497:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 498:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 501:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 504:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 507:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8 FPS_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 303              		.loc 1 509 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 510:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(FPS_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/FPS_Timer.c ****         (void)CY_GET_REG16(FPS_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/FPS_Timer.c ****         (void)CY_GET_REG8(FPS_Timer_COUNTER_LSB_PTR_8BIT);
 308              		.loc 1 516 0
 309 0000 024B     		ldr	r3, .L35
 310 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif/* (FPS_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 519:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(FPS_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/FPS_Timer.c ****         return ((uint8)CY_GET_REG16(FPS_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/FPS_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/FPS_Timer.c ****         return (CY_GET_REG8(FPS_Timer_CAPTURE_LSB_PTR));
 311              		.loc 1 523 0
 312 0004 024B     		ldr	r3, .L35+4
 313 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 524:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* (FPS_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 314              		.loc 1 525 0
 315 0008 7047     		bx	lr
 316              	.L36:
 317 000a 00BF     		.align	2
 318              	.L35:
 319 000c 0B640040 		.word	1073767435
 320 0010 4B640040 		.word	1073767499
 321              		.cfi_endproc
 322              	.LFE13:
 323              		.size	FPS_Timer_ReadCounter, .-FPS_Timer_ReadCounter
 324              		.section	.text.FPS_Timer_ClearFIFO,"ax",%progbits
 325              		.align	2
 326              		.global	FPS_Timer_ClearFIFO
 327              		.thumb
 328              		.thumb_func
 329              		.type	FPS_Timer_ClearFIFO, %function
 330              	FPS_Timer_ClearFIFO:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 16


 331              	.LFB14:
 526:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 527:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 528:.\Generated_Source\PSoC5/FPS_Timer.c **** #if(!FPS_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 530:.\Generated_Source\PSoC5/FPS_Timer.c ****     
 531:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/FPS_Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/FPS_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/FPS_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 536:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 537:.\Generated_Source\PSoC5/FPS_Timer.c **** #if (FPS_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 539:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 540:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 544:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 547:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/FPS_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/FPS_Timer.c **** *  #define FPS_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/FPS_Timer.c **** #define FPS_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/FPS_Timer.c **** #define FPS_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/FPS_Timer.c **** #define FPS_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/FPS_Timer.c **** #define FPS_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/FPS_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/FPS_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/FPS_Timer.c **** *  FPS_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/FPS_Timer.c **** *  FPS_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/FPS_Timer.c **** *  FPS_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/FPS_Timer.c **** *  FPS_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 562:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 565:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 568:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/FPS_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << FPS_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/FPS_Timer.c ****     captureMode &= (FPS_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 572:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL &= ((uint8)(~FPS_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 576:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* (!FPS_Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 580:.\Generated_Source\PSoC5/FPS_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/FPS_Timer.c **** 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 17


 582:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 583:.\Generated_Source\PSoC5/FPS_Timer.c **** #if (FPS_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 585:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 586:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 590:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 593:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/FPS_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/FPS_Timer.c ****     #define FPS_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/FPS_Timer.c ****     #define FPS_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/FPS_Timer.c ****     #define FPS_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/FPS_Timer.c ****     #define FPS_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/FPS_Timer.c ****     #define FPS_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 601:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 604:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 607:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/FPS_Timer.c ****     triggerMode &= FPS_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 610:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 611:.\Generated_Source\PSoC5/FPS_Timer.c ****     
 612:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL &= ((uint8)(~FPS_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 615:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL |= (triggerMode | FPS_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 619:.\Generated_Source\PSoC5/FPS_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 621:.\Generated_Source\PSoC5/FPS_Timer.c **** #if (FPS_Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 623:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 624:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 628:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 631:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 634:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 636:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 637:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_EnableTrigger(void) 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 18


 639:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 640:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 641:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL |= FPS_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 644:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 645:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 646:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 650:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 653:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 656:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 659:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 662:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed
 663:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL &= ((uint8)(~FPS_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 666:.\Generated_Source\PSoC5/FPS_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 668:.\Generated_Source\PSoC5/FPS_Timer.c **** #if(FPS_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 670:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 671:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 675:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 678:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/FPS_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/FPS_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/FPS_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/FPS_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 684:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 687:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 690:.\Generated_Source\PSoC5/FPS_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/FPS_Timer.c ****     interruptCount &= FPS_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 693:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if (!FPS_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL &= ((uint8)(~FPS_Timer_CTRL_INTCNT_MASK));
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 19


 696:.\Generated_Source\PSoC5/FPS_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/FPS_Timer.c ****         FPS_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* (!FPS_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 700:.\Generated_Source\PSoC5/FPS_Timer.c **** #endif /* FPS_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 702:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 703:.\Generated_Source\PSoC5/FPS_Timer.c **** #if (FPS_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 705:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 706:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 710:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 713:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/FPS_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/FPS_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/FPS_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 718:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 721:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 724:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 726:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 727:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 728:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 732:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 735:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 738:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/FPS_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 741:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/FPS_Timer.c **** uint8 FPS_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 744:.\Generated_Source\PSoC5/FPS_Timer.c ****     return ((uint8)FPS_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 746:.\Generated_Source\PSoC5/FPS_Timer.c **** #endif /* FPS_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 748:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 749:.\Generated_Source\PSoC5/FPS_Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/FPS_Timer.c **** * Function Name: FPS_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/FPS_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/FPS_Timer.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 20


 753:.\Generated_Source\PSoC5/FPS_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/FPS_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 756:.\Generated_Source\PSoC5/FPS_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 759:.\Generated_Source\PSoC5/FPS_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/FPS_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/FPS_Timer.c **** *
 762:.\Generated_Source\PSoC5/FPS_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/FPS_Timer.c **** void FPS_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/FPS_Timer.c **** {
 332              		.loc 1 764 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336 0000 08B5     		push	{r3, lr}
 337              		.cfi_def_cfa_offset 8
 338              		.cfi_offset 3, -8
 339              		.cfi_offset 14, -4
 765:.\Generated_Source\PSoC5/FPS_Timer.c ****     while(0u != (FPS_Timer_ReadStatusRegister() & FPS_Timer_STATUS_FIFONEMP))
 340              		.loc 1 765 0
 341 0002 01E0     		b	.L38
 342              	.L39:
 766:.\Generated_Source\PSoC5/FPS_Timer.c ****     {
 767:.\Generated_Source\PSoC5/FPS_Timer.c ****         (void)FPS_Timer_ReadCapture();
 343              		.loc 1 767 0
 344 0004 FFF7FEFF 		bl	FPS_Timer_ReadCapture
 345              	.LVL4:
 346              	.L38:
 765:.\Generated_Source\PSoC5/FPS_Timer.c ****     while(0u != (FPS_Timer_ReadStatusRegister() & FPS_Timer_STATUS_FIFONEMP))
 347              		.loc 1 765 0
 348 0008 FFF7FEFF 		bl	FPS_Timer_ReadStatusRegister
 349              	.LVL5:
 350 000c 10F0080F 		tst	r0, #8
 351 0010 F8D1     		bne	.L39
 768:.\Generated_Source\PSoC5/FPS_Timer.c ****     }
 769:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 352              		.loc 1 769 0
 353 0012 08BD     		pop	{r3, pc}
 354              		.cfi_endproc
 355              	.LFE14:
 356              		.size	FPS_Timer_ClearFIFO, .-FPS_Timer_ClearFIFO
 357              		.section	.text.FPS_Timer_Init,"ax",%progbits
 358              		.align	2
 359              		.global	FPS_Timer_Init
 360              		.thumb
 361              		.thumb_func
 362              		.type	FPS_Timer_Init, %function
 363              	FPS_Timer_Init:
 364              	.LFB0:
  44:.\Generated_Source\PSoC5/FPS_Timer.c ****     #if(!FPS_Timer_UsingFixedFunction)
 365              		.loc 1 44 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 21


 370              		.cfi_def_cfa_offset 8
 371              		.cfi_offset 3, -8
 372              		.cfi_offset 14, -4
 118:.\Generated_Source\PSoC5/FPS_Timer.c ****     FPS_Timer_WriteCounter(FPS_Timer_INIT_PERIOD);
 373              		.loc 1 118 0
 374 0002 0120     		movs	r0, #1
 375 0004 FFF7FEFF 		bl	FPS_Timer_WritePeriod
 376              	.LVL6:
 119:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 377              		.loc 1 119 0
 378 0008 0120     		movs	r0, #1
 379 000a FFF7FEFF 		bl	FPS_Timer_WriteCounter
 380              	.LVL7:
 142:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 381              		.loc 1 142 0
 382 000e FFF7FEFF 		bl	CyEnterCriticalSection
 383              	.LVL8:
 145:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 384              		.loc 1 145 0
 385 0012 064A     		ldr	r2, .L43
 386 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 387 0016 43F01003 		orr	r3, r3, #16
 388 001a 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 389              		.loc 1 148 0
 390 001c FFF7FEFF 		bl	CyExitCriticalSection
 391              	.LVL9:
 159:.\Generated_Source\PSoC5/FPS_Timer.c ****     #endif /* Configure additional features of UDB implementation */
 392              		.loc 1 159 0
 393 0020 FFF7FEFF 		bl	FPS_Timer_ClearFIFO
 394              	.LVL10:
 162:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 395              		.loc 1 162 0
 396 0024 0120     		movs	r0, #1
 397 0026 FFF7FEFF 		bl	FPS_Timer_SetInterruptMode
 398              	.LVL11:
 399 002a 08BD     		pop	{r3, pc}
 400              	.L44:
 401              		.align	2
 402              	.L43:
 403 002c 9B640040 		.word	1073767579
 404              		.cfi_endproc
 405              	.LFE0:
 406              		.size	FPS_Timer_Init, .-FPS_Timer_Init
 407              		.section	.text.FPS_Timer_Start,"ax",%progbits
 408              		.align	2
 409              		.global	FPS_Timer_Start
 410              		.thumb
 411              		.thumb_func
 412              		.type	FPS_Timer_Start, %function
 413              	FPS_Timer_Start:
 414              	.LFB2:
 216:.\Generated_Source\PSoC5/FPS_Timer.c ****     if(FPS_Timer_initVar == 0u)
 415              		.loc 1 216 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 22


 419 0000 08B5     		push	{r3, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 3, -8
 422              		.cfi_offset 14, -4
 217:.\Generated_Source\PSoC5/FPS_Timer.c ****     {
 423              		.loc 1 217 0
 424 0002 054B     		ldr	r3, .L48
 425 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 426 0006 23B9     		cbnz	r3, .L46
 219:.\Generated_Source\PSoC5/FPS_Timer.c **** 
 427              		.loc 1 219 0
 428 0008 FFF7FEFF 		bl	FPS_Timer_Init
 429              	.LVL12:
 221:.\Generated_Source\PSoC5/FPS_Timer.c ****     }
 430              		.loc 1 221 0
 431 000c 0122     		movs	r2, #1
 432 000e 024B     		ldr	r3, .L48
 433 0010 1A70     		strb	r2, [r3]
 434              	.L46:
 225:.\Generated_Source\PSoC5/FPS_Timer.c **** }
 435              		.loc 1 225 0
 436 0012 FFF7FEFF 		bl	FPS_Timer_Enable
 437              	.LVL13:
 438 0016 08BD     		pop	{r3, pc}
 439              	.L49:
 440              		.align	2
 441              	.L48:
 442 0018 00000000 		.word	.LANCHOR0
 443              		.cfi_endproc
 444              	.LFE2:
 445              		.size	FPS_Timer_Start, .-FPS_Timer_Start
 446              		.global	FPS_Timer_initVar
 447              		.bss
 448              		.set	.LANCHOR0,. + 0
 449              		.type	FPS_Timer_initVar, %object
 450              		.size	FPS_Timer_initVar, 1
 451              	FPS_Timer_initVar:
 452 0000 00       		.space	1
 453              		.text
 454              	.Letext0:
 455              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 456              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 457              		.section	.debug_info,"",%progbits
 458              	.Ldebug_info0:
 459 0000 CD020000 		.4byte	0x2cd
 460 0004 0400     		.2byte	0x4
 461 0006 00000000 		.4byte	.Ldebug_abbrev0
 462 000a 04       		.byte	0x4
 463 000b 01       		.uleb128 0x1
 464 000c 70000000 		.4byte	.LASF35
 465 0010 01       		.byte	0x1
 466 0011 9F020000 		.4byte	.LASF36
 467 0015 E0010000 		.4byte	.LASF37
 468 0019 00000000 		.4byte	.Ldebug_ranges0+0
 469 001d 00000000 		.4byte	0
 470 0021 00000000 		.4byte	.Ldebug_line0
 471 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 23


 472 0026 01       		.byte	0x1
 473 0027 06       		.byte	0x6
 474 0028 75030000 		.4byte	.LASF0
 475 002c 02       		.uleb128 0x2
 476 002d 01       		.byte	0x1
 477 002e 08       		.byte	0x8
 478 002f 8C010000 		.4byte	.LASF1
 479 0033 02       		.uleb128 0x2
 480 0034 02       		.byte	0x2
 481 0035 05       		.byte	0x5
 482 0036 2E030000 		.4byte	.LASF2
 483 003a 02       		.uleb128 0x2
 484 003b 02       		.byte	0x2
 485 003c 07       		.byte	0x7
 486 003d 1E010000 		.4byte	.LASF3
 487 0041 02       		.uleb128 0x2
 488 0042 04       		.byte	0x4
 489 0043 05       		.byte	0x5
 490 0044 51030000 		.4byte	.LASF4
 491 0048 02       		.uleb128 0x2
 492 0049 04       		.byte	0x4
 493 004a 07       		.byte	0x7
 494 004b AF010000 		.4byte	.LASF5
 495 004f 02       		.uleb128 0x2
 496 0050 08       		.byte	0x8
 497 0051 05       		.byte	0x5
 498 0052 EA020000 		.4byte	.LASF6
 499 0056 02       		.uleb128 0x2
 500 0057 08       		.byte	0x8
 501 0058 07       		.byte	0x7
 502 0059 75010000 		.4byte	.LASF7
 503 005d 03       		.uleb128 0x3
 504 005e 04       		.byte	0x4
 505 005f 05       		.byte	0x5
 506 0060 696E7400 		.ascii	"int\000"
 507 0064 02       		.uleb128 0x2
 508 0065 04       		.byte	0x4
 509 0066 07       		.byte	0x7
 510 0067 61020000 		.4byte	.LASF8
 511 006b 04       		.uleb128 0x4
 512 006c C1010000 		.4byte	.LASF12
 513 0070 02       		.byte	0x2
 514 0071 9201     		.2byte	0x192
 515 0073 2C000000 		.4byte	0x2c
 516 0077 02       		.uleb128 0x2
 517 0078 04       		.byte	0x4
 518 0079 04       		.byte	0x4
 519 007a 67010000 		.4byte	.LASF9
 520 007e 02       		.uleb128 0x2
 521 007f 08       		.byte	0x8
 522 0080 04       		.byte	0x4
 523 0081 20020000 		.4byte	.LASF10
 524 0085 02       		.uleb128 0x2
 525 0086 01       		.byte	0x1
 526 0087 08       		.byte	0x8
 527 0088 1A000000 		.4byte	.LASF11
 528 008c 04       		.uleb128 0x4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 24


 529 008d AA010000 		.4byte	.LASF13
 530 0091 02       		.byte	0x2
 531 0092 3C02     		.2byte	0x23c
 532 0094 98000000 		.4byte	0x98
 533 0098 05       		.uleb128 0x5
 534 0099 6B000000 		.4byte	0x6b
 535 009d 02       		.uleb128 0x2
 536 009e 08       		.byte	0x8
 537 009f 04       		.byte	0x4
 538 00a0 69030000 		.4byte	.LASF14
 539 00a4 02       		.uleb128 0x2
 540 00a5 04       		.byte	0x4
 541 00a6 07       		.byte	0x7
 542 00a7 E1020000 		.4byte	.LASF15
 543 00ab 06       		.uleb128 0x6
 544 00ac CF010000 		.4byte	.LASF16
 545 00b0 01       		.byte	0x1
 546 00b1 B4       		.byte	0xb4
 547 00b2 00000000 		.4byte	.LFB1
 548 00b6 10000000 		.4byte	.LFE1-.LFB1
 549 00ba 01       		.uleb128 0x1
 550 00bb 9C       		.byte	0x9c
 551 00bc 06       		.uleb128 0x6
 552 00bd 5A030000 		.4byte	.LASF17
 553 00c1 01       		.byte	0x1
 554 00c2 F7       		.byte	0xf7
 555 00c3 00000000 		.4byte	.LFB3
 556 00c7 10000000 		.4byte	.LFE3-.LFB3
 557 00cb 01       		.uleb128 0x1
 558 00cc 9C       		.byte	0x9c
 559 00cd 07       		.uleb128 0x7
 560 00ce 84020000 		.4byte	.LASF21
 561 00d2 01       		.byte	0x1
 562 00d3 1701     		.2byte	0x117
 563 00d5 00000000 		.4byte	.LFB4
 564 00d9 0C000000 		.4byte	.LFE4-.LFB4
 565 00dd 01       		.uleb128 0x1
 566 00de 9C       		.byte	0x9c
 567 00df F2000000 		.4byte	0xf2
 568 00e3 08       		.uleb128 0x8
 569 00e4 0A030000 		.4byte	.LASF23
 570 00e8 01       		.byte	0x1
 571 00e9 1701     		.2byte	0x117
 572 00eb 6B000000 		.4byte	0x6b
 573 00ef 01       		.uleb128 0x1
 574 00f0 50       		.byte	0x50
 575 00f1 00       		.byte	0
 576 00f2 09       		.uleb128 0x9
 577 00f3 00000000 		.4byte	.LASF18
 578 00f7 01       		.byte	0x1
 579 00f8 2E01     		.2byte	0x12e
 580 00fa 00000000 		.4byte	.LFB5
 581 00fe 0C000000 		.4byte	.LFE5-.LFB5
 582 0102 01       		.uleb128 0x1
 583 0103 9C       		.byte	0x9c
 584 0104 0A       		.uleb128 0xa
 585 0105 C4020000 		.4byte	.LASF19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 25


 586 0109 01       		.byte	0x1
 587 010a 4D01     		.2byte	0x14d
 588 010c 6B000000 		.4byte	0x6b
 589 0110 00000000 		.4byte	.LFB6
 590 0114 0C000000 		.4byte	.LFE6-.LFB6
 591 0118 01       		.uleb128 0x1
 592 0119 9C       		.byte	0x9c
 593 011a 0A       		.uleb128 0xa
 594 011b 4B000000 		.4byte	.LASF20
 595 011f 01       		.byte	0x1
 596 0120 6401     		.2byte	0x164
 597 0122 6B000000 		.4byte	0x6b
 598 0126 00000000 		.4byte	.LFB7
 599 012a 0C000000 		.4byte	.LFE7-.LFB7
 600 012e 01       		.uleb128 0x1
 601 012f 9C       		.byte	0x9c
 602 0130 07       		.uleb128 0x7
 603 0131 48010000 		.4byte	.LASF22
 604 0135 01       		.byte	0x1
 605 0136 7B01     		.2byte	0x17b
 606 0138 00000000 		.4byte	.LFB8
 607 013c 0C000000 		.4byte	.LFE8-.LFB8
 608 0140 01       		.uleb128 0x1
 609 0141 9C       		.byte	0x9c
 610 0142 55010000 		.4byte	0x155
 611 0146 08       		.uleb128 0x8
 612 0147 C7010000 		.4byte	.LASF24
 613 014b 01       		.byte	0x1
 614 014c 7B01     		.2byte	0x17b
 615 014e 6B000000 		.4byte	0x6b
 616 0152 01       		.uleb128 0x1
 617 0153 50       		.byte	0x50
 618 0154 00       		.byte	0
 619 0155 0A       		.uleb128 0xa
 620 0156 09010000 		.4byte	.LASF25
 621 015a 01       		.byte	0x1
 622 015b 9501     		.2byte	0x195
 623 015d 6B000000 		.4byte	0x6b
 624 0161 00000000 		.4byte	.LFB9
 625 0165 0C000000 		.4byte	.LFE9-.LFB9
 626 0169 01       		.uleb128 0x1
 627 016a 9C       		.byte	0x9c
 628 016b 07       		.uleb128 0x7
 629 016c 1F000000 		.4byte	.LASF26
 630 0170 01       		.byte	0x1
 631 0171 AF01     		.2byte	0x1af
 632 0173 00000000 		.4byte	.LFB10
 633 0177 0C000000 		.4byte	.LFE10-.LFB10
 634 017b 01       		.uleb128 0x1
 635 017c 9C       		.byte	0x9c
 636 017d 90010000 		.4byte	0x190
 637 0181 08       		.uleb128 0x8
 638 0182 69000000 		.4byte	.LASF27
 639 0186 01       		.byte	0x1
 640 0187 AF01     		.2byte	0x1af
 641 0189 6B000000 		.4byte	0x6b
 642 018d 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 26


 643 018e 50       		.byte	0x50
 644 018f 00       		.byte	0
 645 0190 0A       		.uleb128 0xa
 646 0191 18030000 		.4byte	.LASF28
 647 0195 01       		.byte	0x1
 648 0196 C801     		.2byte	0x1c8
 649 0198 6B000000 		.4byte	0x6b
 650 019c 00000000 		.4byte	.LFB11
 651 01a0 0C000000 		.4byte	.LFE11-.LFB11
 652 01a4 01       		.uleb128 0x1
 653 01a5 9C       		.byte	0x9c
 654 01a6 07       		.uleb128 0x7
 655 01a7 31010000 		.4byte	.LASF29
 656 01ab 01       		.byte	0x1
 657 01ac E001     		.2byte	0x1e0
 658 01ae 00000000 		.4byte	.LFB12
 659 01b2 0C000000 		.4byte	.LFE12-.LFB12
 660 01b6 01       		.uleb128 0x1
 661 01b7 9C       		.byte	0x9c
 662 01b8 CB010000 		.4byte	0x1cb
 663 01bc 08       		.uleb128 0x8
 664 01bd 6D010000 		.4byte	.LASF30
 665 01c1 01       		.byte	0x1
 666 01c2 E001     		.2byte	0x1e0
 667 01c4 6B000000 		.4byte	0x6b
 668 01c8 01       		.uleb128 0x1
 669 01c9 50       		.byte	0x50
 670 01ca 00       		.byte	0
 671 01cb 0A       		.uleb128 0xa
 672 01cc 35000000 		.4byte	.LASF31
 673 01d0 01       		.byte	0x1
 674 01d1 FC01     		.2byte	0x1fc
 675 01d3 6B000000 		.4byte	0x6b
 676 01d7 00000000 		.4byte	.LFB13
 677 01db 14000000 		.4byte	.LFE13-.LFB13
 678 01df 01       		.uleb128 0x1
 679 01e0 9C       		.byte	0x9c
 680 01e1 07       		.uleb128 0x7
 681 01e2 27020000 		.4byte	.LASF32
 682 01e6 01       		.byte	0x1
 683 01e7 FB02     		.2byte	0x2fb
 684 01e9 00000000 		.4byte	.LFB14
 685 01ed 14000000 		.4byte	.LFE14-.LFB14
 686 01f1 01       		.uleb128 0x1
 687 01f2 9C       		.byte	0x9c
 688 01f3 0A020000 		.4byte	0x20a
 689 01f7 0B       		.uleb128 0xb
 690 01f8 08000000 		.4byte	.LVL4
 691 01fc 90010000 		.4byte	0x190
 692 0200 0B       		.uleb128 0xb
 693 0201 0C000000 		.4byte	.LVL5
 694 0205 04010000 		.4byte	0x104
 695 0209 00       		.byte	0
 696 020a 0C       		.uleb128 0xc
 697 020b 3B020000 		.4byte	.LASF33
 698 020f 01       		.byte	0x1
 699 0210 2B       		.byte	0x2b
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 27


 700 0211 00000000 		.4byte	.LFB0
 701 0215 30000000 		.4byte	.LFE0-.LFB0
 702 0219 01       		.uleb128 0x1
 703 021a 9C       		.byte	0x9c
 704 021b 7F020000 		.4byte	0x27f
 705 021f 0D       		.uleb128 0xd
 706 0220 38030000 		.4byte	.LASF38
 707 0224 01       		.byte	0x1
 708 0225 2F       		.byte	0x2f
 709 0226 6B000000 		.4byte	0x6b
 710 022a 00000000 		.4byte	.LLST0
 711 022e 0E       		.uleb128 0xe
 712 022f 08000000 		.4byte	.LVL6
 713 0233 6B010000 		.4byte	0x16b
 714 0237 41020000 		.4byte	0x241
 715 023b 0F       		.uleb128 0xf
 716 023c 01       		.uleb128 0x1
 717 023d 50       		.byte	0x50
 718 023e 01       		.uleb128 0x1
 719 023f 31       		.byte	0x31
 720 0240 00       		.byte	0
 721 0241 0E       		.uleb128 0xe
 722 0242 0E000000 		.4byte	.LVL7
 723 0246 A6010000 		.4byte	0x1a6
 724 024a 54020000 		.4byte	0x254
 725 024e 0F       		.uleb128 0xf
 726 024f 01       		.uleb128 0x1
 727 0250 50       		.byte	0x50
 728 0251 01       		.uleb128 0x1
 729 0252 31       		.byte	0x31
 730 0253 00       		.byte	0
 731 0254 0B       		.uleb128 0xb
 732 0255 12000000 		.4byte	.LVL8
 733 0259 B8020000 		.4byte	0x2b8
 734 025d 0B       		.uleb128 0xb
 735 025e 20000000 		.4byte	.LVL9
 736 0262 C3020000 		.4byte	0x2c3
 737 0266 0B       		.uleb128 0xb
 738 0267 24000000 		.4byte	.LVL10
 739 026b E1010000 		.4byte	0x1e1
 740 026f 10       		.uleb128 0x10
 741 0270 2A000000 		.4byte	.LVL11
 742 0274 CD000000 		.4byte	0xcd
 743 0278 0F       		.uleb128 0xf
 744 0279 01       		.uleb128 0x1
 745 027a 50       		.byte	0x50
 746 027b 01       		.uleb128 0x1
 747 027c 31       		.byte	0x31
 748 027d 00       		.byte	0
 749 027e 00       		.byte	0
 750 027f 0C       		.uleb128 0xc
 751 0280 9A010000 		.4byte	.LASF34
 752 0284 01       		.byte	0x1
 753 0285 D7       		.byte	0xd7
 754 0286 00000000 		.4byte	.LFB2
 755 028a 1C000000 		.4byte	.LFE2-.LFB2
 756 028e 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 28


 757 028f 9C       		.byte	0x9c
 758 0290 A7020000 		.4byte	0x2a7
 759 0294 0B       		.uleb128 0xb
 760 0295 0C000000 		.4byte	.LVL12
 761 0299 0A020000 		.4byte	0x20a
 762 029d 0B       		.uleb128 0xb
 763 029e 16000000 		.4byte	.LVL13
 764 02a2 AB000000 		.4byte	0xab
 765 02a6 00       		.byte	0
 766 02a7 11       		.uleb128 0x11
 767 02a8 F8020000 		.4byte	.LASF39
 768 02ac 01       		.byte	0x1
 769 02ad 1A       		.byte	0x1a
 770 02ae 6B000000 		.4byte	0x6b
 771 02b2 05       		.uleb128 0x5
 772 02b3 03       		.byte	0x3
 773 02b4 00000000 		.4byte	FPS_Timer_initVar
 774 02b8 12       		.uleb128 0x12
 775 02b9 4A020000 		.4byte	.LASF40
 776 02bd 03       		.byte	0x3
 777 02be 7D       		.byte	0x7d
 778 02bf 6B000000 		.4byte	0x6b
 779 02c3 13       		.uleb128 0x13
 780 02c4 6E020000 		.4byte	.LASF41
 781 02c8 03       		.byte	0x3
 782 02c9 7E       		.byte	0x7e
 783 02ca 14       		.uleb128 0x14
 784 02cb 6B000000 		.4byte	0x6b
 785 02cf 00       		.byte	0
 786 02d0 00       		.byte	0
 787              		.section	.debug_abbrev,"",%progbits
 788              	.Ldebug_abbrev0:
 789 0000 01       		.uleb128 0x1
 790 0001 11       		.uleb128 0x11
 791 0002 01       		.byte	0x1
 792 0003 25       		.uleb128 0x25
 793 0004 0E       		.uleb128 0xe
 794 0005 13       		.uleb128 0x13
 795 0006 0B       		.uleb128 0xb
 796 0007 03       		.uleb128 0x3
 797 0008 0E       		.uleb128 0xe
 798 0009 1B       		.uleb128 0x1b
 799 000a 0E       		.uleb128 0xe
 800 000b 55       		.uleb128 0x55
 801 000c 17       		.uleb128 0x17
 802 000d 11       		.uleb128 0x11
 803 000e 01       		.uleb128 0x1
 804 000f 10       		.uleb128 0x10
 805 0010 17       		.uleb128 0x17
 806 0011 00       		.byte	0
 807 0012 00       		.byte	0
 808 0013 02       		.uleb128 0x2
 809 0014 24       		.uleb128 0x24
 810 0015 00       		.byte	0
 811 0016 0B       		.uleb128 0xb
 812 0017 0B       		.uleb128 0xb
 813 0018 3E       		.uleb128 0x3e
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 29


 814 0019 0B       		.uleb128 0xb
 815 001a 03       		.uleb128 0x3
 816 001b 0E       		.uleb128 0xe
 817 001c 00       		.byte	0
 818 001d 00       		.byte	0
 819 001e 03       		.uleb128 0x3
 820 001f 24       		.uleb128 0x24
 821 0020 00       		.byte	0
 822 0021 0B       		.uleb128 0xb
 823 0022 0B       		.uleb128 0xb
 824 0023 3E       		.uleb128 0x3e
 825 0024 0B       		.uleb128 0xb
 826 0025 03       		.uleb128 0x3
 827 0026 08       		.uleb128 0x8
 828 0027 00       		.byte	0
 829 0028 00       		.byte	0
 830 0029 04       		.uleb128 0x4
 831 002a 16       		.uleb128 0x16
 832 002b 00       		.byte	0
 833 002c 03       		.uleb128 0x3
 834 002d 0E       		.uleb128 0xe
 835 002e 3A       		.uleb128 0x3a
 836 002f 0B       		.uleb128 0xb
 837 0030 3B       		.uleb128 0x3b
 838 0031 05       		.uleb128 0x5
 839 0032 49       		.uleb128 0x49
 840 0033 13       		.uleb128 0x13
 841 0034 00       		.byte	0
 842 0035 00       		.byte	0
 843 0036 05       		.uleb128 0x5
 844 0037 35       		.uleb128 0x35
 845 0038 00       		.byte	0
 846 0039 49       		.uleb128 0x49
 847 003a 13       		.uleb128 0x13
 848 003b 00       		.byte	0
 849 003c 00       		.byte	0
 850 003d 06       		.uleb128 0x6
 851 003e 2E       		.uleb128 0x2e
 852 003f 00       		.byte	0
 853 0040 3F       		.uleb128 0x3f
 854 0041 19       		.uleb128 0x19
 855 0042 03       		.uleb128 0x3
 856 0043 0E       		.uleb128 0xe
 857 0044 3A       		.uleb128 0x3a
 858 0045 0B       		.uleb128 0xb
 859 0046 3B       		.uleb128 0x3b
 860 0047 0B       		.uleb128 0xb
 861 0048 27       		.uleb128 0x27
 862 0049 19       		.uleb128 0x19
 863 004a 11       		.uleb128 0x11
 864 004b 01       		.uleb128 0x1
 865 004c 12       		.uleb128 0x12
 866 004d 06       		.uleb128 0x6
 867 004e 40       		.uleb128 0x40
 868 004f 18       		.uleb128 0x18
 869 0050 9742     		.uleb128 0x2117
 870 0052 19       		.uleb128 0x19
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 30


 871 0053 00       		.byte	0
 872 0054 00       		.byte	0
 873 0055 07       		.uleb128 0x7
 874 0056 2E       		.uleb128 0x2e
 875 0057 01       		.byte	0x1
 876 0058 3F       		.uleb128 0x3f
 877 0059 19       		.uleb128 0x19
 878 005a 03       		.uleb128 0x3
 879 005b 0E       		.uleb128 0xe
 880 005c 3A       		.uleb128 0x3a
 881 005d 0B       		.uleb128 0xb
 882 005e 3B       		.uleb128 0x3b
 883 005f 05       		.uleb128 0x5
 884 0060 27       		.uleb128 0x27
 885 0061 19       		.uleb128 0x19
 886 0062 11       		.uleb128 0x11
 887 0063 01       		.uleb128 0x1
 888 0064 12       		.uleb128 0x12
 889 0065 06       		.uleb128 0x6
 890 0066 40       		.uleb128 0x40
 891 0067 18       		.uleb128 0x18
 892 0068 9742     		.uleb128 0x2117
 893 006a 19       		.uleb128 0x19
 894 006b 01       		.uleb128 0x1
 895 006c 13       		.uleb128 0x13
 896 006d 00       		.byte	0
 897 006e 00       		.byte	0
 898 006f 08       		.uleb128 0x8
 899 0070 05       		.uleb128 0x5
 900 0071 00       		.byte	0
 901 0072 03       		.uleb128 0x3
 902 0073 0E       		.uleb128 0xe
 903 0074 3A       		.uleb128 0x3a
 904 0075 0B       		.uleb128 0xb
 905 0076 3B       		.uleb128 0x3b
 906 0077 05       		.uleb128 0x5
 907 0078 49       		.uleb128 0x49
 908 0079 13       		.uleb128 0x13
 909 007a 02       		.uleb128 0x2
 910 007b 18       		.uleb128 0x18
 911 007c 00       		.byte	0
 912 007d 00       		.byte	0
 913 007e 09       		.uleb128 0x9
 914 007f 2E       		.uleb128 0x2e
 915 0080 00       		.byte	0
 916 0081 3F       		.uleb128 0x3f
 917 0082 19       		.uleb128 0x19
 918 0083 03       		.uleb128 0x3
 919 0084 0E       		.uleb128 0xe
 920 0085 3A       		.uleb128 0x3a
 921 0086 0B       		.uleb128 0xb
 922 0087 3B       		.uleb128 0x3b
 923 0088 05       		.uleb128 0x5
 924 0089 27       		.uleb128 0x27
 925 008a 19       		.uleb128 0x19
 926 008b 11       		.uleb128 0x11
 927 008c 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 31


 928 008d 12       		.uleb128 0x12
 929 008e 06       		.uleb128 0x6
 930 008f 40       		.uleb128 0x40
 931 0090 18       		.uleb128 0x18
 932 0091 9742     		.uleb128 0x2117
 933 0093 19       		.uleb128 0x19
 934 0094 00       		.byte	0
 935 0095 00       		.byte	0
 936 0096 0A       		.uleb128 0xa
 937 0097 2E       		.uleb128 0x2e
 938 0098 00       		.byte	0
 939 0099 3F       		.uleb128 0x3f
 940 009a 19       		.uleb128 0x19
 941 009b 03       		.uleb128 0x3
 942 009c 0E       		.uleb128 0xe
 943 009d 3A       		.uleb128 0x3a
 944 009e 0B       		.uleb128 0xb
 945 009f 3B       		.uleb128 0x3b
 946 00a0 05       		.uleb128 0x5
 947 00a1 27       		.uleb128 0x27
 948 00a2 19       		.uleb128 0x19
 949 00a3 49       		.uleb128 0x49
 950 00a4 13       		.uleb128 0x13
 951 00a5 11       		.uleb128 0x11
 952 00a6 01       		.uleb128 0x1
 953 00a7 12       		.uleb128 0x12
 954 00a8 06       		.uleb128 0x6
 955 00a9 40       		.uleb128 0x40
 956 00aa 18       		.uleb128 0x18
 957 00ab 9742     		.uleb128 0x2117
 958 00ad 19       		.uleb128 0x19
 959 00ae 00       		.byte	0
 960 00af 00       		.byte	0
 961 00b0 0B       		.uleb128 0xb
 962 00b1 898201   		.uleb128 0x4109
 963 00b4 00       		.byte	0
 964 00b5 11       		.uleb128 0x11
 965 00b6 01       		.uleb128 0x1
 966 00b7 31       		.uleb128 0x31
 967 00b8 13       		.uleb128 0x13
 968 00b9 00       		.byte	0
 969 00ba 00       		.byte	0
 970 00bb 0C       		.uleb128 0xc
 971 00bc 2E       		.uleb128 0x2e
 972 00bd 01       		.byte	0x1
 973 00be 3F       		.uleb128 0x3f
 974 00bf 19       		.uleb128 0x19
 975 00c0 03       		.uleb128 0x3
 976 00c1 0E       		.uleb128 0xe
 977 00c2 3A       		.uleb128 0x3a
 978 00c3 0B       		.uleb128 0xb
 979 00c4 3B       		.uleb128 0x3b
 980 00c5 0B       		.uleb128 0xb
 981 00c6 27       		.uleb128 0x27
 982 00c7 19       		.uleb128 0x19
 983 00c8 11       		.uleb128 0x11
 984 00c9 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 32


 985 00ca 12       		.uleb128 0x12
 986 00cb 06       		.uleb128 0x6
 987 00cc 40       		.uleb128 0x40
 988 00cd 18       		.uleb128 0x18
 989 00ce 9742     		.uleb128 0x2117
 990 00d0 19       		.uleb128 0x19
 991 00d1 01       		.uleb128 0x1
 992 00d2 13       		.uleb128 0x13
 993 00d3 00       		.byte	0
 994 00d4 00       		.byte	0
 995 00d5 0D       		.uleb128 0xd
 996 00d6 34       		.uleb128 0x34
 997 00d7 00       		.byte	0
 998 00d8 03       		.uleb128 0x3
 999 00d9 0E       		.uleb128 0xe
 1000 00da 3A       		.uleb128 0x3a
 1001 00db 0B       		.uleb128 0xb
 1002 00dc 3B       		.uleb128 0x3b
 1003 00dd 0B       		.uleb128 0xb
 1004 00de 49       		.uleb128 0x49
 1005 00df 13       		.uleb128 0x13
 1006 00e0 02       		.uleb128 0x2
 1007 00e1 17       		.uleb128 0x17
 1008 00e2 00       		.byte	0
 1009 00e3 00       		.byte	0
 1010 00e4 0E       		.uleb128 0xe
 1011 00e5 898201   		.uleb128 0x4109
 1012 00e8 01       		.byte	0x1
 1013 00e9 11       		.uleb128 0x11
 1014 00ea 01       		.uleb128 0x1
 1015 00eb 31       		.uleb128 0x31
 1016 00ec 13       		.uleb128 0x13
 1017 00ed 01       		.uleb128 0x1
 1018 00ee 13       		.uleb128 0x13
 1019 00ef 00       		.byte	0
 1020 00f0 00       		.byte	0
 1021 00f1 0F       		.uleb128 0xf
 1022 00f2 8A8201   		.uleb128 0x410a
 1023 00f5 00       		.byte	0
 1024 00f6 02       		.uleb128 0x2
 1025 00f7 18       		.uleb128 0x18
 1026 00f8 9142     		.uleb128 0x2111
 1027 00fa 18       		.uleb128 0x18
 1028 00fb 00       		.byte	0
 1029 00fc 00       		.byte	0
 1030 00fd 10       		.uleb128 0x10
 1031 00fe 898201   		.uleb128 0x4109
 1032 0101 01       		.byte	0x1
 1033 0102 11       		.uleb128 0x11
 1034 0103 01       		.uleb128 0x1
 1035 0104 31       		.uleb128 0x31
 1036 0105 13       		.uleb128 0x13
 1037 0106 00       		.byte	0
 1038 0107 00       		.byte	0
 1039 0108 11       		.uleb128 0x11
 1040 0109 34       		.uleb128 0x34
 1041 010a 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 33


 1042 010b 03       		.uleb128 0x3
 1043 010c 0E       		.uleb128 0xe
 1044 010d 3A       		.uleb128 0x3a
 1045 010e 0B       		.uleb128 0xb
 1046 010f 3B       		.uleb128 0x3b
 1047 0110 0B       		.uleb128 0xb
 1048 0111 49       		.uleb128 0x49
 1049 0112 13       		.uleb128 0x13
 1050 0113 3F       		.uleb128 0x3f
 1051 0114 19       		.uleb128 0x19
 1052 0115 02       		.uleb128 0x2
 1053 0116 18       		.uleb128 0x18
 1054 0117 00       		.byte	0
 1055 0118 00       		.byte	0
 1056 0119 12       		.uleb128 0x12
 1057 011a 2E       		.uleb128 0x2e
 1058 011b 00       		.byte	0
 1059 011c 3F       		.uleb128 0x3f
 1060 011d 19       		.uleb128 0x19
 1061 011e 03       		.uleb128 0x3
 1062 011f 0E       		.uleb128 0xe
 1063 0120 3A       		.uleb128 0x3a
 1064 0121 0B       		.uleb128 0xb
 1065 0122 3B       		.uleb128 0x3b
 1066 0123 0B       		.uleb128 0xb
 1067 0124 27       		.uleb128 0x27
 1068 0125 19       		.uleb128 0x19
 1069 0126 49       		.uleb128 0x49
 1070 0127 13       		.uleb128 0x13
 1071 0128 3C       		.uleb128 0x3c
 1072 0129 19       		.uleb128 0x19
 1073 012a 00       		.byte	0
 1074 012b 00       		.byte	0
 1075 012c 13       		.uleb128 0x13
 1076 012d 2E       		.uleb128 0x2e
 1077 012e 01       		.byte	0x1
 1078 012f 3F       		.uleb128 0x3f
 1079 0130 19       		.uleb128 0x19
 1080 0131 03       		.uleb128 0x3
 1081 0132 0E       		.uleb128 0xe
 1082 0133 3A       		.uleb128 0x3a
 1083 0134 0B       		.uleb128 0xb
 1084 0135 3B       		.uleb128 0x3b
 1085 0136 0B       		.uleb128 0xb
 1086 0137 27       		.uleb128 0x27
 1087 0138 19       		.uleb128 0x19
 1088 0139 3C       		.uleb128 0x3c
 1089 013a 19       		.uleb128 0x19
 1090 013b 00       		.byte	0
 1091 013c 00       		.byte	0
 1092 013d 14       		.uleb128 0x14
 1093 013e 05       		.uleb128 0x5
 1094 013f 00       		.byte	0
 1095 0140 49       		.uleb128 0x49
 1096 0141 13       		.uleb128 0x13
 1097 0142 00       		.byte	0
 1098 0143 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 34


 1099 0144 00       		.byte	0
 1100              		.section	.debug_loc,"",%progbits
 1101              	.Ldebug_loc0:
 1102              	.LLST0:
 1103 0000 12000000 		.4byte	.LVL8
 1104 0004 1F000000 		.4byte	.LVL9-1
 1105 0008 0100     		.2byte	0x1
 1106 000a 50       		.byte	0x50
 1107 000b 00000000 		.4byte	0
 1108 000f 00000000 		.4byte	0
 1109              		.section	.debug_aranges,"",%progbits
 1110 0000 8C000000 		.4byte	0x8c
 1111 0004 0200     		.2byte	0x2
 1112 0006 00000000 		.4byte	.Ldebug_info0
 1113 000a 04       		.byte	0x4
 1114 000b 00       		.byte	0
 1115 000c 0000     		.2byte	0
 1116 000e 0000     		.2byte	0
 1117 0010 00000000 		.4byte	.LFB1
 1118 0014 10000000 		.4byte	.LFE1-.LFB1
 1119 0018 00000000 		.4byte	.LFB3
 1120 001c 10000000 		.4byte	.LFE3-.LFB3
 1121 0020 00000000 		.4byte	.LFB4
 1122 0024 0C000000 		.4byte	.LFE4-.LFB4
 1123 0028 00000000 		.4byte	.LFB5
 1124 002c 0C000000 		.4byte	.LFE5-.LFB5
 1125 0030 00000000 		.4byte	.LFB6
 1126 0034 0C000000 		.4byte	.LFE6-.LFB6
 1127 0038 00000000 		.4byte	.LFB7
 1128 003c 0C000000 		.4byte	.LFE7-.LFB7
 1129 0040 00000000 		.4byte	.LFB8
 1130 0044 0C000000 		.4byte	.LFE8-.LFB8
 1131 0048 00000000 		.4byte	.LFB9
 1132 004c 0C000000 		.4byte	.LFE9-.LFB9
 1133 0050 00000000 		.4byte	.LFB10
 1134 0054 0C000000 		.4byte	.LFE10-.LFB10
 1135 0058 00000000 		.4byte	.LFB11
 1136 005c 0C000000 		.4byte	.LFE11-.LFB11
 1137 0060 00000000 		.4byte	.LFB12
 1138 0064 0C000000 		.4byte	.LFE12-.LFB12
 1139 0068 00000000 		.4byte	.LFB13
 1140 006c 14000000 		.4byte	.LFE13-.LFB13
 1141 0070 00000000 		.4byte	.LFB14
 1142 0074 14000000 		.4byte	.LFE14-.LFB14
 1143 0078 00000000 		.4byte	.LFB0
 1144 007c 30000000 		.4byte	.LFE0-.LFB0
 1145 0080 00000000 		.4byte	.LFB2
 1146 0084 1C000000 		.4byte	.LFE2-.LFB2
 1147 0088 00000000 		.4byte	0
 1148 008c 00000000 		.4byte	0
 1149              		.section	.debug_ranges,"",%progbits
 1150              	.Ldebug_ranges0:
 1151 0000 00000000 		.4byte	.LFB1
 1152 0004 10000000 		.4byte	.LFE1
 1153 0008 00000000 		.4byte	.LFB3
 1154 000c 10000000 		.4byte	.LFE3
 1155 0010 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 35


 1156 0014 0C000000 		.4byte	.LFE4
 1157 0018 00000000 		.4byte	.LFB5
 1158 001c 0C000000 		.4byte	.LFE5
 1159 0020 00000000 		.4byte	.LFB6
 1160 0024 0C000000 		.4byte	.LFE6
 1161 0028 00000000 		.4byte	.LFB7
 1162 002c 0C000000 		.4byte	.LFE7
 1163 0030 00000000 		.4byte	.LFB8
 1164 0034 0C000000 		.4byte	.LFE8
 1165 0038 00000000 		.4byte	.LFB9
 1166 003c 0C000000 		.4byte	.LFE9
 1167 0040 00000000 		.4byte	.LFB10
 1168 0044 0C000000 		.4byte	.LFE10
 1169 0048 00000000 		.4byte	.LFB11
 1170 004c 0C000000 		.4byte	.LFE11
 1171 0050 00000000 		.4byte	.LFB12
 1172 0054 0C000000 		.4byte	.LFE12
 1173 0058 00000000 		.4byte	.LFB13
 1174 005c 14000000 		.4byte	.LFE13
 1175 0060 00000000 		.4byte	.LFB14
 1176 0064 14000000 		.4byte	.LFE14
 1177 0068 00000000 		.4byte	.LFB0
 1178 006c 30000000 		.4byte	.LFE0
 1179 0070 00000000 		.4byte	.LFB2
 1180 0074 1C000000 		.4byte	.LFE2
 1181 0078 00000000 		.4byte	0
 1182 007c 00000000 		.4byte	0
 1183              		.section	.debug_line,"",%progbits
 1184              	.Ldebug_line0:
 1185 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1185      02005300 
 1185      00000201 
 1185      FB0E0D00 
 1185      01010101 
 1186              	.LASF18:
 1187 0000 4650535F 		.ascii	"FPS_Timer_SoftwareCapture\000"
 1187      54696D65 
 1187      725F536F 
 1187      66747761 
 1187      72654361 
 1188              	.LASF11:
 1189 001a 63686172 		.ascii	"char\000"
 1189      00
 1190              	.LASF26:
 1191 001f 4650535F 		.ascii	"FPS_Timer_WritePeriod\000"
 1191      54696D65 
 1191      725F5772 
 1191      69746550 
 1191      6572696F 
 1192              	.LASF31:
 1193 0035 4650535F 		.ascii	"FPS_Timer_ReadCounter\000"
 1193      54696D65 
 1193      725F5265 
 1193      6164436F 
 1193      756E7465 
 1194              	.LASF20:
 1195 004b 4650535F 		.ascii	"FPS_Timer_ReadControlRegister\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 36


 1195      54696D65 
 1195      725F5265 
 1195      6164436F 
 1195      6E74726F 
 1196              	.LASF27:
 1197 0069 70657269 		.ascii	"period\000"
 1197      6F6400
 1198              	.LASF35:
 1199 0070 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1199      4320342E 
 1199      392E3320 
 1199      32303135 
 1199      30333033 
 1200 00a3 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1200      20726576 
 1200      6973696F 
 1200      6E203232 
 1200      31323230 
 1201 00d6 67202D73 		.ascii	"g -std=gnu11 -ffunction-sections -ffat-lto-objects\000"
 1201      74643D67 
 1201      6E753131 
 1201      202D6666 
 1201      756E6374 
 1202              	.LASF25:
 1203 0109 4650535F 		.ascii	"FPS_Timer_ReadPeriod\000"
 1203      54696D65 
 1203      725F5265 
 1203      61645065 
 1203      72696F64 
 1204              	.LASF3:
 1205 011e 73686F72 		.ascii	"short unsigned int\000"
 1205      7420756E 
 1205      7369676E 
 1205      65642069 
 1205      6E7400
 1206              	.LASF29:
 1207 0131 4650535F 		.ascii	"FPS_Timer_WriteCounter\000"
 1207      54696D65 
 1207      725F5772 
 1207      69746543 
 1207      6F756E74 
 1208              	.LASF22:
 1209 0148 4650535F 		.ascii	"FPS_Timer_WriteControlRegister\000"
 1209      54696D65 
 1209      725F5772 
 1209      69746543 
 1209      6F6E7472 
 1210              	.LASF9:
 1211 0167 666C6F61 		.ascii	"float\000"
 1211      7400
 1212              	.LASF30:
 1213 016d 636F756E 		.ascii	"counter\000"
 1213      74657200 
 1214              	.LASF7:
 1215 0175 6C6F6E67 		.ascii	"long long unsigned int\000"
 1215      206C6F6E 
 1215      6720756E 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 37


 1215      7369676E 
 1215      65642069 
 1216              	.LASF1:
 1217 018c 756E7369 		.ascii	"unsigned char\000"
 1217      676E6564 
 1217      20636861 
 1217      7200
 1218              	.LASF34:
 1219 019a 4650535F 		.ascii	"FPS_Timer_Start\000"
 1219      54696D65 
 1219      725F5374 
 1219      61727400 
 1220              	.LASF13:
 1221 01aa 72656738 		.ascii	"reg8\000"
 1221      00
 1222              	.LASF5:
 1223 01af 6C6F6E67 		.ascii	"long unsigned int\000"
 1223      20756E73 
 1223      69676E65 
 1223      6420696E 
 1223      7400
 1224              	.LASF12:
 1225 01c1 75696E74 		.ascii	"uint8\000"
 1225      3800
 1226              	.LASF24:
 1227 01c7 636F6E74 		.ascii	"control\000"
 1227      726F6C00 
 1228              	.LASF16:
 1229 01cf 4650535F 		.ascii	"FPS_Timer_Enable\000"
 1229      54696D65 
 1229      725F456E 
 1229      61626C65 
 1229      00
 1230              	.LASF37:
 1231 01e0 433A5C55 		.ascii	"C:\\Users\\User\\Documents\\MIT 6.115\\finalproject"
 1231      73657273 
 1231      5C557365 
 1231      725C446F 
 1231      63756D65 
 1232 020e 5C477569 		.ascii	"\\GuitarHero.cydsn\000"
 1232      74617248 
 1232      65726F2E 
 1232      63796473 
 1232      6E00
 1233              	.LASF10:
 1234 0220 646F7562 		.ascii	"double\000"
 1234      6C6500
 1235              	.LASF32:
 1236 0227 4650535F 		.ascii	"FPS_Timer_ClearFIFO\000"
 1236      54696D65 
 1236      725F436C 
 1236      65617246 
 1236      49464F00 
 1237              	.LASF33:
 1238 023b 4650535F 		.ascii	"FPS_Timer_Init\000"
 1238      54696D65 
 1238      725F496E 
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 38


 1238      697400
 1239              	.LASF40:
 1240 024a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1240      74657243 
 1240      72697469 
 1240      63616C53 
 1240      65637469 
 1241              	.LASF8:
 1242 0261 756E7369 		.ascii	"unsigned int\000"
 1242      676E6564 
 1242      20696E74 
 1242      00
 1243              	.LASF41:
 1244 026e 43794578 		.ascii	"CyExitCriticalSection\000"
 1244      69744372 
 1244      69746963 
 1244      616C5365 
 1244      6374696F 
 1245              	.LASF21:
 1246 0284 4650535F 		.ascii	"FPS_Timer_SetInterruptMode\000"
 1246      54696D65 
 1246      725F5365 
 1246      74496E74 
 1246      65727275 
 1247              	.LASF36:
 1248 029f 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\FPS_Timer.c\000"
 1248      6E657261 
 1248      7465645F 
 1248      536F7572 
 1248      63655C50 
 1249              	.LASF19:
 1250 02c4 4650535F 		.ascii	"FPS_Timer_ReadStatusRegister\000"
 1250      54696D65 
 1250      725F5265 
 1250      61645374 
 1250      61747573 
 1251              	.LASF15:
 1252 02e1 73697A65 		.ascii	"sizetype\000"
 1252      74797065 
 1252      00
 1253              	.LASF6:
 1254 02ea 6C6F6E67 		.ascii	"long long int\000"
 1254      206C6F6E 
 1254      6720696E 
 1254      7400
 1255              	.LASF39:
 1256 02f8 4650535F 		.ascii	"FPS_Timer_initVar\000"
 1256      54696D65 
 1256      725F696E 
 1256      69745661 
 1256      7200
 1257              	.LASF23:
 1258 030a 696E7465 		.ascii	"interruptMode\000"
 1258      72727570 
 1258      744D6F64 
 1258      6500
 1259              	.LASF28:
ARM GAS  C:\Users\User\AppData\Local\Temp\ccm4lzPb.s 			page 39


 1260 0318 4650535F 		.ascii	"FPS_Timer_ReadCapture\000"
 1260      54696D65 
 1260      725F5265 
 1260      61644361 
 1260      70747572 
 1261              	.LASF2:
 1262 032e 73686F72 		.ascii	"short int\000"
 1262      7420696E 
 1262      7400
 1263              	.LASF38:
 1264 0338 4650535F 		.ascii	"FPS_Timer_interruptState\000"
 1264      54696D65 
 1264      725F696E 
 1264      74657272 
 1264      75707453 
 1265              	.LASF4:
 1266 0351 6C6F6E67 		.ascii	"long int\000"
 1266      20696E74 
 1266      00
 1267              	.LASF17:
 1268 035a 4650535F 		.ascii	"FPS_Timer_Stop\000"
 1268      54696D65 
 1268      725F5374 
 1268      6F7000
 1269              	.LASF14:
 1270 0369 6C6F6E67 		.ascii	"long double\000"
 1270      20646F75 
 1270      626C6500 
 1271              	.LASF0:
 1272 0375 7369676E 		.ascii	"signed char\000"
 1272      65642063 
 1272      68617200 
 1273              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
